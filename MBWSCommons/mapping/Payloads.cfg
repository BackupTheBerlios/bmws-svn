#RULES:
#Data for your OWN character start with "Character"
#Data for OTHER people and npcs start with "OCharacter" and may use Character
#Data for creaturs start with "Creature" and may use OCharacter

# Chatmessages and Serverinfos
# Author is filled by server !
begin_class MessageData
	String 		author
	String 		recipient
	String		message
end_class

# Login S->C
begin_class LoginData
	String		userName
	String		password
end_class

# Account
# user to create a new account C->S
begin_class AccountData
	String		userName
	String		password
	String		emailAddress
end_class

# 
begin_class SystemErrorData
	String		reason
end_class

begin_class SystemInformationData
	byte		severity
	String		messageCodeKey
	String		additionalInfo
end_class

# Helpers
begin_class IntVector3D
	int	x
	int	y
	int z
end_class

begin_class NetQuaternion
	float w
	float x
	float y
	float z
end_class

# Movement 
# Used to signal a movement change by the client and the server
# C->S, S-> Cs
begin_class MoveData
	String objectID
	byte movementType
	byte turnType
	IntVector3D location
	NetQuaternion heading	
end_class

# Used for creation of an object in the world
# C->S, S->Cs
begin_class WorldObject
	String objectID
	int modelID
	IntVector3D location
	NetQuaternion heading
end_class

# Data for the player !
begin_class CharacterVisualAppearance
	int height
	int skinColor
	int faceType
	int hairColor
	int hairStyle
	int hairFacial
	int itemHead
	int itemShoulders
	int itemShirt
	int itemChest
	int itemBelt
	int itemLegs
	int itemBoots
	int itemBracers
	int itemGloves
	int itemCape
	int itemHandLeft
	int itemHandRight
end_class

begin_class CharacterShortDescription
	String characterID
	String name
	String gender
	int race
	String location
	CharacterVisualAppearance visualAppearance
end_class

begin_class CharacterDetails
	CharacterShortDescription description
	IntVector3D location
	NetQuaternion heading	
end_class

# Normal values of the character
begin_class CharacterValues
	int health
	int mana
	int stamina
	int strength
	int intelligence
	int dexterity
	int constitution
end_class

#current status along with the current values
begin_class CharacterStatus
	CharacterValues currentValues
    String charstatus
    String pvp
    String gamestatus
    IntVector3D location
   	NetQuaternion heading
    int freexp
end_class

#encompassing class for the character
begin_class CharacterData
	String characterID
	String name
	String gender
	short age
	int race
	String locationdescription
	IntVector3D location
	NetQuaternion heading
	CharacterValues normalValues
	CharacterStatus status
	CharacterVisualAppearance visualAppearance
end_class

# Create a new Character
# C->S
begin_class CreateCharacter
	byte race
	byte gender
	String name
end_class

#Characters Of Player
begin_class CharactersOfPlayer
	List CharacterData charactersOfPlayer
end_class

begin_class CharacterSelection
	String characterID
end_class

#OtherCharacters and NPCs
#predefined characters (npcs) can use a predefinedModel
#instead of the visualappearence
begin_class OCharacterData
	CharacterVisualAppearance visualAppearance
	String characterID
	String name
	String gender
	int race
	IntVector3D location
   	NetQuaternion heading
   	int maxHealth
   	int currentHealth
   	byte pvp
   	int predefinedModel
end_class


begin_class ServerRedirectData
	String host
	int port
end_class

### Server2Server Communication

begin_class ServerLoginData
	String name
	String password
	ServerRedirectData hostData
end_class

begin_class CharacterWorldServerInformation
	CharacterSelection character
	int sessionId
end_class

### END Server2Server Communication
# Test
begin_class TestData
	String test
	List IntVector3D otherObjects	
end_class
